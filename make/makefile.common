#-------------------------------------------------------------------------------
#                  .
#                .o8
#              .o888oo  .ooooo.  oo.ooooo.   .oooo.     oooooooo
#                888   d88' `88b  888' `88b `P  )88b   d'""7d8P
#                888   888   888  888   888  .oP"888     .d8P'
#                888 . 888   888  888   888 d8(  888   .d8P'  .P
#                "888" `Y8bod8P'  888bod8P' `Y888""8o d8888888P
#                                 888
#                                o888o
#
#                  T O P A Z   P A T T E R N   L I B R A R Y
#
#     TOPAZ is a library of SystemVerilog and UVM patterns and idioms.  The
#     code is suitable for study and for copying/pasting into your own work.
#
#    Copyright 2022 Mark Glasser
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#-------------------------------------------------------------------------------

# TOP must be defined as a path relative to the working directory.  It
# represents the top of the Xenon hierarchy.

include ${TOP}/make/tools.mk

TEST		= test
SIMV		= simv
BUILDLOG	= build.log
RUNLOG		= run.log


#
# source code
#

INC		= +incdir+. 

#
# commands
#

COMPILE_OPTS    = -sverilog                                            \
		  -full64                                              \
                  +vcs+lic+wait                                        \
                  +libext+.v                                           \
                  +libext+.sv                                          \
                  -timescale=1ns/1ps                                   \
                  -debug_access

VCS_CMD		= ${VCS} ${UVM_SRC} ${INC} ${SRC} ${COMPILE_OPTS}

SIMV_ARGS	= +UVM_NO_RELNOTES +UVM_TESTNAME=${TEST} +fsdb+delta

SIMV_CMD	= ./${SIMV} ${SIMV_ARGS} 

#
# rules
#

all: build run

build: ${SRC}
	@echo "[BUILD]" `pwd`
	@echo ${VCS_CMD} > ${BUILDLOG} 2>&1
	@${VCS_CMD} >> ${BUILDLOG} 2>&1
 
run:
	@echo "[RUN]" `pwd`
	@echo ${SIMV_CMD} > ${RUNLOG} 2>&1
	@${SIMV_CMD} >> ${RUNLOG} 2>&1

readme:
	@if [ -f readme.md ]; then \
	  pandoc readme.md --from=markdown --to=plain; \
	  echo; \
	  echo "------------------------------------------------------------------------"; \
	  echo; \
	fi

latex:
	@if [ -f readme.md ]; then \
	  pandoc readme.md --from=markdown --to=latex; \
	fi

clean:
	@echo "[CLEAN]" `pwd`
	@rm -f ${BUILDLOG} ${VCSLOG} *.log
	@rm -rf csrc simv.* vcdplus.vpd DVEfiles
	@rm -f simv ucli.key vc_hdrs.h
	@rm -f novas.* *.fsdb
	@rm -rf verdiLog nWaveLog
	@rm -f xx* *~ #*

